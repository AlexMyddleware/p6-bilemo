{
	"info": {
		"_postman_id": "eb5bfef1-962f-4ded-975d-c7403b233dd9",
		"name": "p6-bilemo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18222978"
	},
	"item": [
		{
			"name": "Login Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"if (responseJson.token) {\r",
							"    pm.environment.set(\"access_token\", responseJson.token);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"margesimpson@bilemo.com\",\r\n    \"password\": \"MargeSimpson3224#\"\r\n}"
				},
				"url": {
					"raw": "http://localhost/api/login_check",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"login_check"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Check Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"if (responseJson.token) {\r",
							"    pm.environment.set(\"access_token\", responseJson.token);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"admin@bilemo.com\",\r\n    \"password\": \"Gandalf234@7\"\r\n}"
				},
				"url": {
					"raw": "http://localhost/api/login_check",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"login_check"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test the phones",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/phones/test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"phones",
						"test"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test the Clients",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/clients/test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"clients",
						"test"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test the customers",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/customers/test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"customers",
						"test"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all the phones",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost/api/phones?page=1&limit=3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"phones"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "limit",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all the clients",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost/api/clients?page=1&limit=5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"clients"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "limit",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all the customers",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json, version=2.0",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost/api/customers?page=1&limit=100",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"customers"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "limit",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all the phones no auth",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/api/phones",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"phones"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all the clients no auth",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/api/clients",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all the customers no auth",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/api/customers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get one customer",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/api/customers/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"customers",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get one phone",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.have.jsonBody('id');\r",
							"    pm.response.to.not.have.jsonBody('error');\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains phone\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"    pm.expect(jsonData).to.have.property('name');\r",
							"    pm.expect(jsonData.name).to.eql('Phone 0');\r",
							"    pm.expect(jsonData).to.have.property('quantity');\r",
							"    pm.expect(jsonData.quantity).to.be.within(0, 100);\r",
							"    pm.expect(jsonData).to.have.property('model');\r",
							"    pm.expect(jsonData.model).to.satisfy(function (model) {\r",
							"        return model >= 'A' && model <= 'F'; // Model should be between 'A' and 'F' (inclusive)\r",
							"    });\r",
							"    pm.expect(jsonData).to.have.property('brand');\r",
							"    pm.expect(jsonData.brand).to.satisfy(function (brand) {\r",
							"        var allowedBrands = ['Apple', 'Samsung', 'Huawei', 'Xiaomi', 'Oppo', 'Vivo'];\r",
							"        return allowedBrands.includes(brand); // Brand should be one of the allowed brands\r",
							"    });\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/api/phones/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"phones",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get one phone Error",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/api/phones/4000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"phones",
						"4000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create customer",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"journal@gmail.com\",\r\n    \"password\": \"jokari892\"\r\n}"
				},
				"url": {
					"raw": "http://localhost/api/customers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Customer",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"newemail@example.com\",\r\n    \"password\":\"newpassword\"\r\n}"
				},
				"url": {
					"raw": "http://localhost/api/customers/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"customers",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete customer",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost/api/customers/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"customers",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get one client",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/api/clients/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"clients",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}